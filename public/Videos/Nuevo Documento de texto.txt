import RPi.GPIO as GPIO
import time
import socketio


GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)

INPUT_BUTTON = 17
LED = 26
BUZZER = 16

GPIO.setup(INPUT_BUTTON, GPIO.IN, pull_up_down=GPIO.PUD_UP)
GPIO.setup(LED, GPIO.OUT)
GPIO.setup(BUZZER, GPIO.OUT)

# Crear PWM para buzzer (tono de 800 Hz estilo telÃ©grafo)
buzzer_pwm = GPIO.PWM(BUZZER, 1500)  # frecuencia en Hz


sio = socketio.Client()

@sio.event
def connect():
    print("Conectado al servidor")
    print(f"ID de sesiÃ³n: {sio.sid}")

@sio.event
def disconnect():
    print("ðŸ”Œ Desconectado del servidor")

sio.connect('https://experience-staging.cuentanostuhistoria.org/', transports=['polling'])

# ---------------------------
# CÃ³digo Morse
# ---------------------------
MORSE_A_LETRA = {
    '.-': 'A', '-...': 'B', '-.-.': 'C', '-..': 'D', '.': 'E',
    '..-.': 'F', '--.': 'G', '....': 'H', '..': 'I', '.---': 'J',
    '-.-': 'K', '.-..': 'L', '--': 'M', '-.': 'N', '---': 'O',
    '.--.': 'P', '--.-': 'Q', '.-.': 'R', '...': 'S', '-': 'T',
    '..-': 'U', '...-': 'V', '.--': 'W', '-..-': 'X', '-.--': 'Y',
    '--..': 'Z', '-----': '0', '.----': '1', '..---': '2',
    '...--': '3', '....-': '4', '.....': '5', '-....': '6',
    '--...': '7', '---..': '8', '----.': '9'
}

UMBRAL_MORSE = 0.3
UMBRAL_LETRA = 1.0

# ---------------------------
# FunciÃ³n principal
# ---------------------------
def main():
    morse_actual = ""
    ultimo_tiempo = time.time()

    print("Iniciando detecciÃ³n de Morse...")

    try:
        while True:
            ahora = time.time()

            if GPIO.input(INPUT_BUTTON) == GPIO.LOW:
                inicio = ahora
                GPIO.output(LED, GPIO.HIGH)

                # Iniciar sonido del buzzer
                buzzer_pwm.start(50)  # 50% de ciclo Ãºtil

                while GPIO.input(INPUT_BUTTON) == GPIO.LOW:
                    time.sleep(0.01)

                duracion = time.time() - inicio
                GPIO.output(LED, GPIO.LOW)

                buzzer_pwm.stop()  # Detener sonido del buzzer

                simbolo = '.' if duracion < UMBRAL_MORSE else '-'
                morse_actual += simbolo
                print(f"Morse parcial: {morse_actual}")
                ultimo_tiempo = time.time()

            if morse_actual and (ahora - ultimo_tiempo) > UMBRAL_LETRA:
                letra = MORSE_A_LETRA.get(morse_actual, '?')
                print(f" Letra detectada: {letra}")
                if letra != '?':
                    sio.emit('portal', letra)
                morse_actual = ""

            time.sleep(0.05)

    except KeyboardInterrupt:
        print("\nPrograma detenido por el usuario")
    finally:
        buzzer_pwm.stop()
        GPIO.cleanup()
        sio.disconnect()

if __name__ == "__main__":
    main()
